# Defining the dev pipeline
dev:
  box: node:5.6.0-slim
  steps:
    - npm-install
    - internal/watch:
        code: node server.js
        reload: true

# Build definition
build:
  box: node:5.6.0-slim
  # The steps that will be executed on build
  steps:
    - script:
        code: export NODE_ENV='production'
    # A step that executes `npm install` command
    - npm-install
    # A step that executes `npm test` command
    - npm-test

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"

    # Create gcloud-playground-controller.json only for initialization
    - script:
        name: create gcloud-playground-controller.json
        code: |
          echo $(pwd) && ls -la
          chmod 777 ./create-gcloud-playground-controller.json.sh
          ./create-gcloud-playground-controller.json.sh
          ls -la

    # Copy files to a location that gets passed along to the deploy pipeline
    - script:
        name: copy files
        code: cp server.js package.json gcloud-playground-controller.json gcloud-playground-service.json "$WERCKER_OUTPUT_DIR"

deploy:
  box: google/cloud-sdk

  quay:
    # Use the scratch step to build a container from scratch based on the files present
    - internal/docker-scratch-push:
        username: $QUAY_USERNAME
        password: $QUAY_PASSWORD
        registry: https://quay.io
        repository: quay.io/gg_dh/gcloud-playground
        tag: $WERCKER_GIT_COMMIT
        cmd: node server.js
        ports: "8080"

  # Run this to create the replication controller and service
  cluster-init:
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: true
        command: create -f gcloud-playground-controller.json

    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: true
        command: create -f gcloud-playground-service.json

  # Update the replica controller to $WERCKER_GIT_COMMIT
  cluster-update:
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: true
        command: rolling-update playground
        image: quay.io/gg_dh/gcloud-playground:$WERCKER_GIT_COMMIT